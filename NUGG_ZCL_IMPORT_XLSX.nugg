<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZCL_IMPORT_XLSX">
 <CLAS CLSNAME="ZCL_IMPORT_XLSX" VERSION="1" LANGU="E" DESCRIPT="Import file xlsx or xls" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXTENSION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;XLSX&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX" VERSION="1" LANGU="E" DESCRIPT="Export File Excel" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX" SCONAME="IT_DATA" VERSION="1" LANGU="E" DESCRIPT="Data" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <parameter CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX" SCONAME="I_TEMPLATE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX" SCONAME="I_FILENAME" VERSION="1" LANGU="E" DESCRIPT="File name" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>METHOD EXPORT_XSLX.
*    DATA LW_FILENAME TYPE IBIPPARMS-PATH.
    DATA:
      LT_RAW_DATA TYPE MIME_DATA,
      LW_EXT      TYPE CHAR10.
    DATA: LW_NAME     TYPE STRING,
          LW_FILENAME TYPE STRING,
          LW_PATH     TYPE STRING,
          LW_FULLPATH TYPE STRING,
          LW_RESULT   TYPE I.
    CHECK IT_DATA[] IS NOT INITIAL.

*    CALL FUNCTION &apos;F4_FILENAME&apos;
*      EXPORTING
*        PROGRAM_NAME  = SY-REPID
*        DYNPRO_NUMBER = SYST-DYNNR
*        FIELD_NAME    = &apos;export_data.xlsx&apos;
*      IMPORTING
*        FILE_NAME     = LW_FILENAME.
    IF I_FILENAME IS NOT INITIAL.
      LW_NAME = I_FILENAME.
    ELSE.
      LW_NAME = &apos;export_data.xlsx&apos;.
    ENDIF.
    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;FILE_SAVE_DIALOG
      EXPORTING
        DEFAULT_EXTENSION = &apos;XLSX&apos;
        DEFAULT_FILE_NAME = LW_NAME
      CHANGING
        FILENAME          = LW_FILENAME
        PATH              = LW_PATH
        FULLPATH          = LW_FULLPATH
        USER_ACTION       = LW_RESULT.

    CALL FUNCTION &apos;ZXLWB_CALLFORM&apos;
      EXPORTING
        IV_FORMNAME           = I_TEMPLATE
        IV_VIEWER_TITLE       = &apos;Data Export&apos;
        IV_CONTEXT_REF        = IT_DATA[]
        IV_VIEWER_SUPPRESS    = &apos;X&apos;
*       IV_SAVE_AS            = LW_FILENAME
        IV_SAVE_AS            = LW_FULLPATH
      IMPORTING
        EV_DOCUMENT_RAWDATA   = LT_RAW_DATA
        EV_DOCUMENT_EXTENSION = LW_EXT
      EXCEPTIONS
        OTHERS                = 2.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX_FLAT" VERSION="1" LANGU="E" DESCRIPT="Export File Excel" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX_FLAT" SCONAME="IS_DATA" VERSION="1" LANGU="E" DESCRIPT="Data" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX_FLAT" SCONAME="I_TEMPLATE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="EXPORT_XSLX_FLAT" SCONAME="I_FILENAME" VERSION="1" LANGU="E" DESCRIPT="File name" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>METHOD EXPORT_XSLX_FLAT.
*    DATA LW_FILENAME TYPE IBIPPARMS-PATH.
    DATA:
      LT_RAW_DATA TYPE MIME_DATA,
      LW_EXT      TYPE CHAR10.
    DATA: LW_NAME     TYPE STRING,
          LW_FILENAME TYPE STRING,
          LW_PATH     TYPE STRING,
          LW_FULLPATH TYPE STRING,
          LW_RESULT   TYPE I.
    CHECK IS_DATA IS NOT INITIAL.

    IF I_FILENAME IS NOT INITIAL.
      LW_NAME = I_FILENAME.
    ELSE.
      LW_NAME = &apos;export_data.xlsx&apos;.
    ENDIF.
    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;FILE_SAVE_DIALOG
      EXPORTING
        DEFAULT_EXTENSION = &apos;XLSX&apos;
        DEFAULT_FILE_NAME = LW_NAME
      CHANGING
        FILENAME          = LW_FILENAME
        PATH              = LW_PATH
        FULLPATH          = LW_FULLPATH
        USER_ACTION       = LW_RESULT.
    CHECK LW_FULLPATH IS NOT INITIAL.
    CALL FUNCTION &apos;ZXLWB_CALLFORM&apos;
      EXPORTING
        IV_FORMNAME           = I_TEMPLATE
        IV_VIEWER_TITLE       = &apos;Data Export&apos;
        IV_CONTEXT_REF        = IS_DATA
        IV_VIEWER_SUPPRESS    = &apos;X&apos;
        IV_SAVE_AS            = LW_FULLPATH
      IMPORTING
        EV_DOCUMENT_RAWDATA   = LT_RAW_DATA
        EV_DOCUMENT_EXTENSION = LW_EXT
      EXCEPTIONS
        PROCESS_TERMINATED    = 1
        OTHERS                = 2.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="IMPORT_XSLX" VERSION="1" LANGU="E" DESCRIPT="Import File Excel" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IMPORT_XLSX" CMPNAME="IMPORT_XSLX" SCONAME="ET_DATA" VERSION="1" LANGU="E" DESCRIPT="Data" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE"/>
   <source>METHOD IMPORT_XSLX.
    DATA: LT_FILETABLE   TYPE FILETABLE,
          LS_FILE        TYPE FILE_TABLE,
          LW_RETURN_CODE TYPE I,
          LW_EXT(4)      TYPE C,
          LT_TXT_FILE    TYPE TRUXS_T_TEXT_DATA,
          LW_FILE_NAME   TYPE RLGRAP-FILENAME.
*    Open Dialog
    CALL METHOD CL_GUI_FRONTEND_SERVICES=&gt;FILE_OPEN_DIALOG
      EXPORTING
        DEFAULT_EXTENSION = &apos;XLSX&apos;
      CHANGING
        FILE_TABLE        = LT_FILETABLE
        RC                = LW_RETURN_CODE.
    READ TABLE LT_FILETABLE INTO LS_FILE INDEX 1.
*   Check extension file
    CALL FUNCTION &apos;TRINT_FILE_GET_EXTENSION&apos;
      EXPORTING
        FILENAME  = LS_FILE-FILENAME
      IMPORTING
        EXTENSION = LW_EXT.

    IF LW_EXT &lt;&gt; &apos;XLSX&apos; AND LW_EXT &lt;&gt; &apos;XLS&apos; AND LW_EXT IS NOT INITIAL.
      MESSAGE S001(ZVPB_AMC) DISPLAY LIKE &apos;E&apos;.
      RETURN.
    ENDIF.
    LW_FILE_NAME = LS_FILE-FILENAME.
*   Read data to dynamic table
    CALL FUNCTION &apos;TEXT_CONVERT_XLS_TO_SAP&apos;
      EXPORTING
        I_LINE_HEADER        = &apos;X&apos;
        I_TAB_RAW_DATA       = LT_TXT_FILE
        I_FILENAME           = LW_FILE_NAME
      TABLES
        I_TAB_CONVERTED_DATA = ET_DATA[]
      EXCEPTIONS
        CONVERSION_FAILED    = 1
        OTHERS               = 2.

    IF SY-SUBRC &lt;&gt; 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDMETHOD.</source>
  </method>
 </CLAS>
</nugget>
